

А.Аргиров, доклад на тему
"Разработка интерпретатора графического языка XLogo"



	Вступление

В  настоящее  время получили широкое распространение языки высокого уровня,
такие  как  C,  Pascal  и  другие. Такие языки специально созданы для того,
чтобы   удовлетворить   все  потребности  программиста  в  написании  любых
программ,  будь  то  мощная  система  управления  базами данных или обычная
анимационная  игра.  XLogo - простой графический язык, позволяющий рисовать
на  экране  монитора  рисунки, состоящие из простых графических примитивов.
На  таком  языке  написать  даже  мало-мальски  полезную  программу нельзя,
он  может использоваться только лишь для обучения основам программирования,
т.к.  и  все  другие  языки,  состоит  из  команд  с параметрами, позволяет
организовывать   циклы  и  процедуры,  вычислять  арифметические  выражения
и запоминать результаты в памяти посредством переменных, применять условные
операторы. Т.к. этот язык графический, в нем также присутствуют специальные
графические  команды  с  помощью  которых можно поворачивать на разные углы
и  передвигать  вперед-назад  на  экране  перо,  которое при движении может
оставлять  за  собой след нужного цвета, тем самым рисуя самые замысловатые
рисунки.



	Трансляторы

    Любая  программа,  написанная на языке высокого уровня, не может просто
так   выполняться      на    компьютере.    Она    предварительно   требует
перевода  с  понятного   нам    языка   на  язык,  понятный машине. Перевод
осуществляется   специальными     программами,     получившими     название
"трансляторы"    (лат.   translatio  -  "передача").  Существует  два  типа
трансляторов:

 - компиляторы,  переводящие  всю  программу,  написанную на языке высокого
уровня,  на  машинный  язык,  после  чего  программа  записывается в память
компьютера  и  лишь  потом  выполняется  (к таким можно отнести компиляторы
языков C и Pascal);

 - интерпретаторы,  переводящие  команды  или  операторы  входной программы
по  очереди  и  немедленно  выполняющие  их  (например, интерпретатор языка
Basic.  XLogo  тоже относится к интерпретаторам, потому что каждую введеную
с клавиатуры команду он транслирует и выполняет немедленно, всегда позволяя
видеть  рисунок  таким,  каким  он  является  к  моменту введения следующей
строки);

    Трансляция программы проходит в несколько стадий:

1) Лексический анализ. На этом этапе текст происходит преобразование текста
программы  в  список  лексем  -  наименьших значимых единиц языка (команда,
оператор,  идентификатор,  число,  разделитель  и  т.д.),  создание таблицы
идентификаторов,  где  будут  храниться значения переменных, проверка чисел
на допустимые диапазоны. Вот, к примеру, как преобразуется строка "FWD 100"
в лексемы на языке XLogo:

	<команда,FWD>
	<число,100>
	<конец_строки>

2)   Синтаксический   анализ.   На   этом   этапе  определяется,  правильна
ли  программа  с  точки зрения языка. Если в программе обнаруживаются явные
ошибки,  трансляция  ее  прекращается  и указываются те места, где нарушены
правила  написания.  Синтаксис  языка  XLogo довольно прост: каждая команда
располагается  на отдельной строке, после команды перечисляются необходимое
количество  параметров  через  запятую.  Например,  команда "ELLIPSE" может
использовать 4 параметра, но обязателен только один:

ELLIPSE 10
ELLIPSE 30,40
ELLIPSE 50,10,0,180

3)  Семантический  анализ.  На этом этапе происходит проверка совместимости
типов   данных   в   выражениях.   При   несоответствии   трансляция  также
останавливается  и  пользователю  указываются  те  места  в  программе, где
произошла  ошибка. Например, выражение вида 12+"ABCD" синтаксически верное,
но   семантически   ошибочное,  т.к.  нельзя  складывать  число  и  строку.
В  трансляторе  языка  XLogo  этот  этап  отсутствует, а вернее он совмещен
с  синтаксическим  анализом,  т.к.  в  языке  всего один тип данных - целое
число.

4)   Оптимизация   программы.   На  этом  этапе  осуществляется  устранение
недостатков  программы,  вызванных  небрежностью  или  низкой квалификацией
программиста,  устранение  излишних  вычислений.  В трансляторе языка XLogo
этот этап не реализован.

5)  Генерация  машинного  кода  (осуществляется  компилятором), завершается
процессом   компоновки  скомпилированных  модулей.  Получившаяся  программа
в   машинных   кодах   записывается   в   память  компьютера  или  на  диск
и впоследствии может выполняться самостоятельно.

6) Интерпретация (осуществляется интерпретатором). На этом этапе происходит
немедленное  выполнение  очередной  команды  программы  и  выявление ошибок
исполнения, которые никак нельзя обнаружить на стадии трансляции. Программу
можно  сохранить  только  в  исходном виде, и в отличие от скомпилированной
программы,  она  не  может  выполняться  самостоятельно,  а требует наличия
в памяти самого интерпретатора. Этот этап характерен для XLogo.



	Интерфейс с пользователем

    При  запуске  XLogo  возникает  рабочий  экран.  В  верхней  его  части
расположена  строка  меню,  в  нижней  части - статусная строка, на которой
отображается  вся  служебная  информация.  В  середине  экрана  расположено
рабочее   окно,  где  будет  чертиться  рисунок,  соответствующий  введеной
программе,  чуть  ниже  -  консоль со строчным редактором. Команды вводятся
по  одной,  немедленно  исполняются  и,  если они не относятся к системным,
то  еще  и  заносятся  в  программу  (запоминаются  в  памяти). К системным
командам  относятся:  SAVE  (сохранить программу на диске), LOAD (загрузить
с  диска),  NEW  (новая  программа),  PRINT (вычислить выражение и показать
результат), LIST (показать листинг программы) и другие. Существует три типа
внесений  изменений  в программу: редактирование (очередная строка подается
в  редактор,  где  ее  можно  отредактировать),  замена (очередная введеная
строка  заменяет  собой  существующую) и вставка (очередная введеная строка
вставляется   между   двух   других)   Любую  информацию  по  командам  или
возможностям можно получить, используя встроенный модуль помощи.
